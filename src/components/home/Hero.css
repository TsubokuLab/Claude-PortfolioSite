.hero {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  position: relative;
  overflow: hidden;
  padding: 5rem 0;
}

.hero-content {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-between;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 2rem;
  gap: 2rem;
}

.hero-text {
  flex: 1;
  min-width: 300px;
  z-index: 1;
}

.hero-subtitle {
  font-size: 1.2rem;
  color: var(--accent);
  margin-bottom: 1rem;
  font-weight: 500;
  letter-spacing: 2px;
}

.hero-title {
  font-size: 4rem;
  font-weight: 700;
  margin-bottom: 1.5rem;
  line-height: 1.1;
  position: relative;
  letter-spacing: 0.05em;
}

/* タイトル文字アニメーション */
.hero-title-char {
  display: inline-block;
  opacity: 0;
  animation: fadeInUp 0.6s forwards;
  animation-delay: calc(var(--delay, 0) + 0.05s);
}

.hero-title-char.space {
  width: 0.5em;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.hero-description {
  font-size: 1.2rem;
  line-height: 1.7;
  color: var(--text-secondary);
  margin-bottom: 2rem;
  max-width: 600px;
}

.hero-buttons {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
}

.button {
  display: inline-block;
  padding: 1rem 2.5rem;
  border-radius: var(--radius-md);
  font-weight: 500;
  font-size: 1rem;
  letter-spacing: 1px;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.button::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.1);
  transform: translateX(-100%);
  transition: transform 0.3s ease;
}

.button:hover::before {
  transform: translateX(0);
}

.button.primary {
  background-color: var(--accent);
  color: white;
}

.button.primary:hover {
  background-color: var(--accent-hover);
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 153, 204, 0.2);
}

.button.secondary {
  background-color: transparent;
  color: var(--text);
  border: 2px solid var(--accent);
}

.button.secondary:hover {
  color: var(--accent);
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 153, 204, 0.1);
}

.hero-image {
  flex: 1;
  min-width: 300px;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  z-index: 1;
}

.hero-image-inner {
  position: relative;
  width: 100%;
  max-width: 500px;
  aspect-ratio: 1 / 1;
  border-radius: var(--radius-lg);
  overflow: hidden;
  box-shadow: var(--card-shadow);
}

/* 新しく追加するコンテナ要素 */
.hero-slider-container {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

/* 画像スライダー用のスタイル */
.hero-slider-image {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover; /* デフォルトでは画像をカバーするように表示 */
}

/* ベースレイヤー（下の層）- 常に表示 */
.hero-slider-image.base-layer {
  z-index: 1;
}

/* オーバーレイレイヤー（上の層）- インラインstyleで制御 */
.hero-slider-image.overlay-layer {
  z-index: 10;
  /* opacity と transition はインラインスタイルで制御 */
}

/* 横長画像表示 */
.parallax-horizontal {
  background-size: auto 100% !important; /* 高さ(短辺)を100%に固定し、幅は自動的にアスペクト比を維持 */
}

/* 縦長画像表示 */
.parallax-vertical {
  background-size: 100% auto !important; /* 幅(短辺)を100%に固定し、高さは自動的にアスペクト比を維持 */
}

/* プレースホルダー */
.hero-image-placeholder {
  width: 100%;
  height: 100%;
  background: linear-gradient(-45deg, var(--accent), var(--accent-secondary));
  animation: gradientMove 10s ease infinite;
  background-size: 400% 400%;
}

@keyframes gradientMove {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* スライダーインジケーター */
.slider-indicators {
  position: absolute;
  bottom: 1rem;
  left: 0;
  right: 0;
  display: flex;
  justify-content: center;
  gap: 0.5rem;
  z-index: 20; /* インジケーターは最も前面に */
}

.slider-indicator {
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background-color: rgba(255, 255, 255, 0.5);
  cursor: pointer;
  transition: all 0.3s ease;
}

.slider-indicator:hover {
  background-color: rgba(255, 255, 255, 0.8);
  transform: scale(1.1);
}

.slider-indicator.active {
  background-color: var(--accent);
  transform: scale(1.2);
}

.hero-scroll-indicator {
  position: absolute;
  bottom: 2rem;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;
  z-index: 1;
}

.scroll-text {
  font-size: 0.8rem;
  letter-spacing: 3px;
  color: var(--text-secondary);
}

.scroll-line {
  width: 1px;
  height: 50px;
  background-color: var(--text-secondary);
  position: relative;
  overflow: hidden;
}

.scroll-line::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--accent);
  animation: scrollLine 2s ease-in-out infinite;
}

@keyframes scrollLine {
  0% {
    transform: translateY(-100%);
  }
  50%, 100% {
    transform: translateY(100%);
  }
}

/* モバイル対応 */
@media (max-width: 768px) {
  .hero-content {
    flex-direction: column;
    text-align: center;
  }

  .hero-title {
    font-size: 3rem;
  }

  .hero-description {
    font-size: 1.1rem;
  }

  .hero-buttons {
    justify-content: center;
  }

  .hero-image {
    margin-top: 2rem;
  }
}